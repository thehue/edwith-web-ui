cascading은 스타일 규칙들이 어떠한 기준으로 요소에 적용되는지를 정한 규칙.
cascading은 폭포가 내려오는 모양처럼 단계적인 이라는 의미를 지니며
모든 스타일 규칙은 cascading의 단계적인 규칙에 따라 요소가 정의된다.

구체성이 같은 두 규칙이 동일한 요소에 적용된다면?
-> 폭포처럼 단계 별로 적용된다.

캐스케이드 규칙
1) 중요도(!important) & 출처
  - 기본적으로 !important로 선언된 모든 규칙은 그렇지 않은 규칙보다 우선한다.
  - 출처는 제작자, 사용자, 사용자 에이전트(user agent)로 구분한다.
  - 제작자 : 사이트 개발자가 작성한 css
  - 사용자 : 사이트를 방문하는 일반 사용자들이 작성한 css(일반 사용자가 직접 css를 만들어서 본인 브라우저에 설정을 해놓은 것)
  - 사용자 agent: 브라우저에 내장된 기본 css

  우선순위
  5. 사용자 에이전트 스타일
  4. 사용자 스타일(요즘 잘 안 씀)
  3. 제작자 스타일
  2. 제작자 !important 스타일
  1. 사용자 !important 스타일(거의 안 씀)
2) 구체성
3) 선언순서
  - 나중에 선언된 코드가 더 우선하게 된다.